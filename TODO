
Next on the list:

  Write additional TestSelect tests.


Bugs:
  - It is possible in the LocalEnvironment that the control queue is filled with
    externally-placed entries. If the LocalEnvThread itself must add entries to
    the control queue (e.g., because of a CompletionEvent posted by
    FlowElementContext.notifyCompletion()), it might deadlock on itself. We need
    a data structure that allows bounded puts from other threads, but the internal
    thread is allowed to override the limit.

  - Cannot SELECT *; individual fields must be explicitly specified.

  - DelimitedEventParser: if the expected type of a column is a union (e.g., because it is  
    nullable), we need to put the parsed entity into a generic union object of the appropriate
    sub-schema. (ArrayIndexOutOfBoundsException gets thrown in avro somewhere...
    this seems to be a problem in the Flume-based source, but not file-based?

    CREATE STREAM foo (a STRING) FROM LOCAL SOURCE "text(\"/var/log/messages\")"; // no good
    SELECT a FROM foo; // returns nothing;

    CREATE STREAM foo (a STRING NOT NULL) FROM LOCAL SOURCE "text(\"/var/log/messages\")"; // ok!
    SELECT a FROM foo; // returns msgs;

    CREATE STREAM foo (a STRING, b INT) FROM LOCAL FILE "/home/aaron/foo.txt";
    SELECT a, b FROM foo; // OK (!?!)


  - Flume is super-chatty when you start it up locally. We should squash its logs,
    unless we're in debug mode.

  - We have precious few automated end-to-end tests. This is hugely problematic.
  - Quitting is very slow due to the Flume shutdown. Can we improve this?
    ... it also emits a scary looking error message, that we should suppress for
    hygeine's sake.

  - The following operates in a weird way:
      CREATE STREAM foo (a STRING NOT NULL) FROM LOCAL SOURCE "text(\"/var/log/messages\")";
      SELECT a FROM foo;

    ... Message bodies seem to be truncated. Why?

Features:

  - Need ability to create a remote physical plan
  -- Need ability to run remote physical plan on a set of configured nodes.
  - Need a DROP FLOW operation
  - Need SHOW FLOWS operation
  - Need ability to auto-connect to a remote Flume resource.

  - Need to pick different delimiters for DelimitedEventParser.
  - Need to pick different EventParser implementations for different streams.

Optimizations:

  - ProjectionNode instances with identical input and output schemata should be removed.
  - ProjectionNode immediately after NamedSource should be fused.
  -- longer term: projection (and filtering) should be pushed up into previous
     FlowElements, when we use DAG tiling.

