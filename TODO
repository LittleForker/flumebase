
Next on the list:

  Create a test harness that can:
  - Put StreamSymbol objects in the symtab with type StreamSymbolType.Memory
  - Execute flows in the local environment without starting Flume.
  - Emit output events to a list in memory for us to inspect and assert against.


Bugs:
  - Cannot SELECT *; individual fields must be explicitly specified.

  - DelimitedEventParser: if the expected type of a column is a union (e.g., because it is  
    nullable), we need to put the parsed entity into a generic union object of the appropriate
    sub-schema.

  - Flume is super-chatty when you start it up locally. We should squash its logs,
    unless we're in debug mode.

  - We have no automated end-to-end tests. This is hugely problematic.
  - Quitting is very slow due to the Flume shutdown. Can we improve this?
    ... it also emits a scary looking error message, that we should suppress for
    hygeine's sake.

  - log4j.properties under src/test/resources/ should really go to a per-test file,
    not stdout/err.


  - The following operates in a weird way:
      CREATE STREAM foo (a STRING NOT NULL) FROM LOCAL SOURCE "text(\"/var/log/messages\")";
      SELECT a FROM foo;

    ... Message bodies seem to be truncated. Why?

Features:

  - Need ability to create a remote physical plan
  -- Need ability to run remote physical plan on a set of configured nodes.
  - Need a DROP FLOW operation
  - Need SHOW FLOWS operation
  - Need ability to auto-connect to a remote Flume resource.

  - Need to pick different delimiters for DelimitedEventParser.
  - Need to pick different EventParser implementations for different streams.

Optimizations:

  - ProjectionNode instances with identical input and output schemata should be removed.
  - ProjectionNode immediately after NamedSource should be fused.
  -- longer term: projection (and filtering) should be pushed up into previous
     FlowElements, when we use DAG tiling.

